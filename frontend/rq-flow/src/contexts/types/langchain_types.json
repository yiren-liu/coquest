{
    "chains": {
        "ConversationChain": {
            "template": {
                "memory": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "memory",
                    "advanced": false,
                    "type": "BaseMemory",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": true
                },
                "verbose": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "verbose",
                    "advanced": true,
                    "type": "bool",
                    "list": false
                },
                "prompt": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": {
                        "input_variables": [
                            "history",
                            "input"
                        ],
                        "output_parser": null,
                        "partial_variables": {},
                        "template": "The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n\nCurrent conversation:\n{history}\nHuman: {input}\nAI:",
                        "template_format": "f-string",
                        "validate_template": true,
                        "_type": "prompt"
                    },
                    "password": false,
                    "name": "prompt",
                    "advanced": false,
                    "type": "BasePromptTemplate",
                    "list": false
                },
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "advanced": false,
                    "type": "BaseLanguageModel",
                    "list": false
                },
                "output_key": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "response",
                    "password": false,
                    "name": "output_key",
                    "advanced": true,
                    "type": "str",
                    "list": false
                },
                "input_key": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "input",
                    "password": false,
                    "name": "input_key",
                    "advanced": true,
                    "type": "str",
                    "list": false
                },
                "_type": "ConversationChain"
            },
            "description": "Chain to have a conversation and load context from memory.",
            "base_classes": [
                "Chain",
                "ConversationChain",
                "LLMChain",
                "function"
            ]
        },
        "LLMChain": {
            "template": {
                "memory": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "memory",
                    "advanced": false,
                    "type": "BaseMemory",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": true
                },
                "verbose": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": false,
                    "password": false,
                    "name": "verbose",
                    "advanced": true,
                    "type": "bool",
                    "list": false
                },
                "prompt": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "prompt",
                    "advanced": false,
                    "type": "BasePromptTemplate",
                    "list": false
                },
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "advanced": false,
                    "type": "BaseLanguageModel",
                    "list": false
                },
                "output_key": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "text",
                    "password": false,
                    "name": "output_key",
                    "advanced": true,
                    "type": "str",
                    "list": false
                },
                "_type": "LLMChain"
            },
            "description": "Chain to run queries against LLMs.",
            "base_classes": [
                "Chain",
                "LLMChain",
                "function"
            ]
        },
        "LLMCheckerChain": {
            "template": {
                "memory": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "memory",
                    "advanced": false,
                    "type": "BaseMemory",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": true
                },
                "verbose": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": false,
                    "password": false,
                    "name": "verbose",
                    "advanced": true,
                    "type": "bool",
                    "list": false
                },
                "question_to_checked_assertions_chain": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "question_to_checked_assertions_chain",
                    "advanced": false,
                    "type": "SequentialChain",
                    "list": false
                },
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "advanced": false,
                    "type": "BaseLLM",
                    "list": false
                },
                "create_draft_answer_prompt": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": {
                        "input_variables": [
                            "question"
                        ],
                        "output_parser": null,
                        "partial_variables": {},
                        "template": "{question}\n\n",
                        "template_format": "f-string",
                        "validate_template": true,
                        "_type": "prompt"
                    },
                    "password": false,
                    "name": "create_draft_answer_prompt",
                    "advanced": false,
                    "type": "PromptTemplate",
                    "list": false
                },
                "list_assertions_prompt": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": {
                        "input_variables": [
                            "statement"
                        ],
                        "output_parser": null,
                        "partial_variables": {},
                        "template": "Here is a statement:\n{statement}\nMake a bullet point list of the assumptions you made when producing the above statement.\n\n",
                        "template_format": "f-string",
                        "validate_template": true,
                        "_type": "prompt"
                    },
                    "password": false,
                    "name": "list_assertions_prompt",
                    "advanced": false,
                    "type": "PromptTemplate",
                    "list": false
                },
                "check_assertions_prompt": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": {
                        "input_variables": [
                            "assertions"
                        ],
                        "output_parser": null,
                        "partial_variables": {},
                        "template": "Here is a bullet point list of assertions:\n{assertions}\nFor each assertion, determine whether it is true or false. If it is false, explain why.\n\n",
                        "template_format": "f-string",
                        "validate_template": true,
                        "_type": "prompt"
                    },
                    "password": false,
                    "name": "check_assertions_prompt",
                    "advanced": false,
                    "type": "PromptTemplate",
                    "list": false
                },
                "revised_answer_prompt": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": {
                        "input_variables": [
                            "checked_assertions",
                            "question"
                        ],
                        "output_parser": null,
                        "partial_variables": {},
                        "template": "{checked_assertions}\n\nQuestion: In light of the above assertions and checks, how would you answer the question '{question}'?\n\nAnswer:",
                        "template_format": "f-string",
                        "validate_template": true,
                        "_type": "prompt"
                    },
                    "password": false,
                    "name": "revised_answer_prompt",
                    "advanced": false,
                    "type": "PromptTemplate",
                    "list": false
                },
                "input_key": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "query",
                    "password": false,
                    "name": "input_key",
                    "advanced": true,
                    "type": "str",
                    "list": false
                },
                "output_key": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "result",
                    "password": false,
                    "name": "output_key",
                    "advanced": true,
                    "type": "str",
                    "list": false
                },
                "_type": "LLMCheckerChain"
            },
            "description": "Chain for question-answering with self-verification.",
            "base_classes": [
                "Chain",
                "LLMCheckerChain",
                "function"
            ]
        },
        "LLMMathChain": {
            "template": {
                "memory": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "memory",
                    "advanced": false,
                    "type": "BaseMemory",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": true
                },
                "verbose": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": false,
                    "password": false,
                    "name": "verbose",
                    "advanced": true,
                    "type": "bool",
                    "list": false
                },
                "llm_chain": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm_chain",
                    "advanced": false,
                    "type": "LLMChain",
                    "list": false
                },
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "advanced": false,
                    "type": "BaseLanguageModel",
                    "list": false
                },
                "prompt": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": {
                        "input_variables": [
                            "question"
                        ],
                        "output_parser": null,
                        "partial_variables": {},
                        "template": "Translate a math problem into a expression that can be executed using Python's numexpr library. Use the output of running this code to answer the question.\n\nQuestion: ${{Question with math problem.}}\n```text\n${{single line mathematical expression that solves the problem}}\n```\n...numexpr.evaluate(text)...\n```output\n${{Output of running the code}}\n```\nAnswer: ${{Answer}}\n\nBegin.\n\nQuestion: What is 37593 * 67?\n\n```text\n37593 * 67\n```\n...numexpr.evaluate(\"37593 * 67\")...\n```output\n2518731\n```\nAnswer: 2518731\n\nQuestion: {question}\n",
                        "template_format": "f-string",
                        "validate_template": true,
                        "_type": "prompt"
                    },
                    "password": false,
                    "name": "prompt",
                    "advanced": false,
                    "type": "BasePromptTemplate",
                    "list": false
                },
                "input_key": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "question",
                    "password": false,
                    "name": "input_key",
                    "advanced": true,
                    "type": "str",
                    "list": false
                },
                "output_key": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "answer",
                    "password": false,
                    "name": "output_key",
                    "advanced": true,
                    "type": "str",
                    "list": false
                },
                "_type": "LLMMathChain"
            },
            "description": "Chain that interprets a prompt and executes python code to do math.",
            "base_classes": [
                "Chain",
                "LLMMathChain",
                "function"
            ]
        },
        "SQLDatabaseChain": {
            "template": {
                "memory": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "memory",
                    "advanced": false,
                    "type": "BaseMemory",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": true
                },
                "verbose": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": false,
                    "password": false,
                    "name": "verbose",
                    "advanced": true,
                    "type": "bool",
                    "list": false
                },
                "llm_chain": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm_chain",
                    "advanced": false,
                    "type": "LLMChain",
                    "list": false
                },
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "advanced": false,
                    "type": "BaseLanguageModel",
                    "list": false
                },
                "database": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "database",
                    "advanced": false,
                    "type": "SQLDatabase",
                    "list": false
                },
                "prompt": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "prompt",
                    "advanced": false,
                    "type": "BasePromptTemplate",
                    "list": false
                },
                "top_k": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 5,
                    "password": false,
                    "name": "top_k",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "input_key": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "query",
                    "password": false,
                    "name": "input_key",
                    "advanced": true,
                    "type": "str",
                    "list": false
                },
                "output_key": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "result",
                    "password": false,
                    "name": "output_key",
                    "advanced": true,
                    "type": "str",
                    "list": false
                },
                "return_intermediate_steps": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": false,
                    "password": false,
                    "name": "return_intermediate_steps",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "return_direct": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": false,
                    "password": false,
                    "name": "return_direct",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "_type": "SQLDatabaseChain"
            },
            "description": "Chain for interacting with SQL Database.",
            "base_classes": [
                "Chain",
                "SQLDatabaseChain",
                "function"
            ]
        },
        "SeriesCharacterChain": {
            "template": {
                "character": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "character",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "series": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "series",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "advanced": false,
                    "type": "BaseLanguageModel",
                    "list": false
                },
                "_type": "SeriesCharacterChain"
            },
            "description": "SeriesCharacterChain is a chain you can use to have a conversation with a character from a series.",
            "base_classes": [
                "LLMChain",
                "BaseCustomChain",
                "Chain",
                "ConversationChain",
                "SeriesCharacterChain",
                "function"
            ]
        },
        "MidJourneyPromptChain": {
            "template": {
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "advanced": false,
                    "type": "BaseLanguageModel",
                    "list": false
                },
                "_type": "MidJourneyPromptChain"
            },
            "description": "MidJourneyPromptChain is a chain you can use to generate new MidJourney prompts.",
            "base_classes": [
                "LLMChain",
                "BaseCustomChain",
                "Chain",
                "ConversationChain",
                "MidJourneyPromptChain"
            ]
        },
        "TimeTravelGuideChain": {
            "template": {
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "advanced": false,
                    "type": "BaseLanguageModel",
                    "list": false
                },
                "_type": "TimeTravelGuideChain"
            },
            "description": "Time travel guide chain to be used in the flow.",
            "base_classes": [
                "LLMChain",
                "BaseCustomChain",
                "TimeTravelGuideChain",
                "Chain",
                "ConversationChain"
            ]
        }
    },
    "agents": {
        "ZeroShotAgent": {
            "template": {
                "llm_chain": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm_chain",
                    "advanced": false,
                    "type": "LLMChain",
                    "list": false
                },
                "output_parser": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "output_parser",
                    "advanced": false,
                    "type": "AgentOutputParser",
                    "list": false
                },
                "allowed_tools": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": [],
                    "password": false,
                    "name": "allowed_tools",
                    "advanced": false,
                    "type": "Tool",
                    "list": true
                },
                "_type": "ZeroShotAgent"
            },
            "description": "Agent for the MRKL chain.",
            "base_classes": [
                "Agent",
                "ZeroShotAgent",
                "BaseSingleActionAgent",
                "function"
            ]
        },
        "JsonAgent": {
            "template": {
                "toolkit": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "toolkit",
                    "advanced": false,
                    "type": "BaseToolkit",
                    "list": false
                },
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "advanced": false,
                    "type": "BaseLanguageModel",
                    "list": false
                },
                "_type": "json_agent"
            },
            "description": "Construct a json agent from an LLM and tools.",
            "base_classes": [
                "AgentExecutor"
            ]
        },
        "CSVAgent": {
            "template": {
                "path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "suffixes": [
                        ".csv"
                    ],
                    "fileTypes": [
                        "csv"
                    ],
                    "password": false,
                    "name": "path",
                    "advanced": false,
                    "type": "file",
                    "list": false,
                    "content": null
                },
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "advanced": false,
                    "type": "BaseLanguageModel",
                    "list": false
                },
                "_type": "csv_agent"
            },
            "description": "Construct a json agent from a CSV and tools.",
            "base_classes": [
                "AgentExecutor"
            ]
        },
        "initialize_agent": {
            "template": {
                "agent": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "zero-shot-react-description",
                    "password": false,
                    "options": [
                        "zero-shot-react-description",
                        "react-docstore",
                        "self-ask-with-search",
                        "conversational-react-description"
                    ],
                    "name": "agent",
                    "advanced": false,
                    "type": "str",
                    "list": true
                },
                "memory": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "memory",
                    "advanced": false,
                    "type": "BaseChatMemory",
                    "list": false
                },
                "tools": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "tools",
                    "advanced": false,
                    "type": "Tool",
                    "list": true
                },
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "advanced": false,
                    "type": "BaseLanguageModel",
                    "list": false
                },
                "_type": "initailize_agent"
            },
            "description": "Construct a json agent from an LLM and tools.",
            "base_classes": [
                "AgentExecutor",
                "function"
            ]
        },
        "VectorStoreAgent": {
            "template": {
                "vectorstoreinfo": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "vectorstoreinfo",
                    "display_name": "Vector Store Info",
                    "advanced": false,
                    "type": "VectorStoreInfo",
                    "list": false
                },
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "display_name": "LLM",
                    "advanced": false,
                    "type": "BaseLanguageModel",
                    "list": false
                },
                "_type": "vectorstore_agent"
            },
            "description": "Construct an agent from a Vector Store.",
            "base_classes": [
                "AgentExecutor"
            ]
        },
        "VectorStoreRouterAgent": {
            "template": {
                "vectorstoreroutertoolkit": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "vectorstoreroutertoolkit",
                    "display_name": "Vector Store Router Toolkit",
                    "advanced": false,
                    "type": "VectorStoreRouterToolkit",
                    "list": false
                },
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "display_name": "LLM",
                    "advanced": false,
                    "type": "BaseLanguageModel",
                    "list": false
                },
                "_type": "vectorstorerouter_agent"
            },
            "description": "Construct an agent from a Vector Store Router.",
            "base_classes": [
                "AgentExecutor"
            ]
        },
        "SQLAgent": {
            "template": {
                "database_uri": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "password": false,
                    "name": "database_uri",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "display_name": "LLM",
                    "advanced": false,
                    "type": "BaseLanguageModel",
                    "list": false
                },
                "_type": "sql_agent"
            },
            "description": "Construct an agent from a Vector Store Router.",
            "base_classes": [
                "AgentExecutor"
            ]
        }
    },
    "prompts": {
        "PromptTemplate": {
            "template": {
                "input_variables": {
                    "required": true,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "input_variables",
                    "advanced": false,
                    "type": "str",
                    "list": true
                },
                "output_parser": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "output_parser",
                    "advanced": false,
                    "type": "BaseOutputParser",
                    "list": false
                },
                "partial_variables": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "partial_variables",
                    "advanced": false,
                    "type": "code",
                    "list": false
                },
                "template": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": true,
                    "password": false,
                    "name": "template",
                    "advanced": false,
                    "type": "prompt",
                    "list": false
                },
                "template_format": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "f-string",
                    "password": false,
                    "name": "template_format",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "validate_template": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": true,
                    "password": false,
                    "name": "validate_template",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "_type": "PromptTemplate"
            },
            "description": "Schema to represent a prompt for an LLM.",
            "base_classes": [
                "StringPromptTemplate",
                "PromptTemplate",
                "BasePromptTemplate"
            ]
        },
        "FewShotPromptTemplate": {
            "template": {
                "input_variables": {
                    "required": true,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "input_variables",
                    "advanced": false,
                    "type": "str",
                    "list": true
                },
                "output_parser": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "output_parser",
                    "advanced": false,
                    "type": "BaseOutputParser",
                    "list": false
                },
                "partial_variables": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "partial_variables",
                    "advanced": false,
                    "type": "code",
                    "list": false
                },
                "examples": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": true,
                    "password": false,
                    "name": "examples",
                    "advanced": false,
                    "type": "prompt",
                    "list": true
                },
                "example_selector": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "example_selector",
                    "advanced": false,
                    "type": "BaseExampleSelector",
                    "list": false
                },
                "example_prompt": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "example_prompt",
                    "advanced": false,
                    "type": "PromptTemplate",
                    "list": false
                },
                "suffix": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": true,
                    "password": false,
                    "name": "suffix",
                    "advanced": false,
                    "type": "prompt",
                    "list": false
                },
                "example_separator": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "\n\n",
                    "password": false,
                    "name": "example_separator",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "prefix": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": true,
                    "value": "",
                    "password": false,
                    "name": "prefix",
                    "advanced": false,
                    "type": "prompt",
                    "list": false
                },
                "template_format": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "f-string",
                    "password": false,
                    "name": "template_format",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "validate_template": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": true,
                    "password": false,
                    "name": "validate_template",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "_type": "FewShotPromptTemplate"
            },
            "description": "Prompt template that contains few shot examples.",
            "base_classes": [
                "StringPromptTemplate",
                "FewShotPromptTemplate",
                "BasePromptTemplate"
            ]
        },
        "ZeroShotPrompt": {
            "template": {
                "prefix": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": true,
                    "value": "Answer the following questions as best you can. You have access to the following tools:",
                    "password": false,
                    "name": "prefix",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "suffix": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": true,
                    "value": "Begin!\n\nQuestion: {input}\nThought:{agent_scratchpad}",
                    "password": false,
                    "name": "suffix",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "format_instructions": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "Use the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question",
                    "password": false,
                    "name": "format_instructions",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "zero_shot"
            },
            "description": "Prompt template for Zero Shot Agent.",
            "base_classes": [
                "BasePromptTemplate"
            ]
        }
    },
    "llms": {
        "HuggingFaceHub": {
            "template": {
                "cache": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "cache",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "verbose": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": false,
                    "password": false,
                    "name": "verbose",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": true
                },
                "client": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "client",
                    "advanced": false,
                    "type": "Any",
                    "list": false
                },
                "repo_id": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "gpt2",
                    "password": false,
                    "name": "repo_id",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "task": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "options": [
                        "text-generation",
                        "text2text-generation"
                    ],
                    "name": "task",
                    "advanced": true,
                    "type": "str",
                    "list": true
                },
                "model_kwargs": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "model_kwargs",
                    "advanced": true,
                    "type": "code",
                    "list": false
                },
                "huggingfacehub_api_token": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": true,
                    "name": "huggingfacehub_api_token",
                    "display_name": "HuggingFace Hub API Token",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "HuggingFaceHub"
            },
            "description": "Wrapper around HuggingFaceHub  models.",
            "base_classes": [
                "BaseLLM",
                "LLM",
                "HuggingFaceHub",
                "BaseLanguageModel"
            ]
        },
        "LlamaCpp": {
            "template": {
                "cache": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "cache",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "verbose": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": false,
                    "password": false,
                    "name": "verbose",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": true
                },
                "client": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "client",
                    "advanced": false,
                    "type": "Any",
                    "list": false
                },
                "model_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "model_path",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "lora_base": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "lora_base",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "lora_path": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "lora_path",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "n_ctx": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 512,
                    "password": false,
                    "name": "n_ctx",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "n_parts": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": -1,
                    "password": false,
                    "name": "n_parts",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "seed": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": -1,
                    "password": false,
                    "name": "seed",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "f16_kv": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": true,
                    "password": false,
                    "name": "f16_kv",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "logits_all": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": false,
                    "password": false,
                    "name": "logits_all",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "vocab_only": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": false,
                    "password": false,
                    "name": "vocab_only",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "use_mlock": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": false,
                    "password": false,
                    "name": "use_mlock",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "n_threads": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "n_threads",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "n_batch": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 8,
                    "password": false,
                    "name": "n_batch",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "suffix": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": true,
                    "password": false,
                    "name": "suffix",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "max_tokens": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": 256,
                    "password": true,
                    "name": "max_tokens",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "temperature": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": 0.8,
                    "password": false,
                    "name": "temperature",
                    "advanced": false,
                    "type": "float",
                    "list": false
                },
                "top_p": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 0.95,
                    "password": false,
                    "name": "top_p",
                    "advanced": false,
                    "type": "float",
                    "list": false
                },
                "logprobs": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "logprobs",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "echo": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": false,
                    "password": false,
                    "name": "echo",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "stop": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "stop",
                    "advanced": false,
                    "type": "str",
                    "list": true
                },
                "repeat_penalty": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 1.1,
                    "password": false,
                    "name": "repeat_penalty",
                    "advanced": false,
                    "type": "float",
                    "list": false
                },
                "top_k": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 40,
                    "password": false,
                    "name": "top_k",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "last_n_tokens_size": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 64,
                    "password": false,
                    "name": "last_n_tokens_size",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "use_mmap": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": true,
                    "password": false,
                    "name": "use_mmap",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "streaming": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": true,
                    "password": false,
                    "name": "streaming",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "_type": "LlamaCpp"
            },
            "description": "Wrapper around the llama.cpp model.",
            "base_classes": [
                "BaseLLM",
                "LLM",
                "LlamaCpp",
                "BaseLanguageModel"
            ]
        },
        "OpenAI": {
            "template": {
                "cache": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "cache",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "verbose": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "verbose",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": true
                },
                "client": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "client",
                    "advanced": false,
                    "type": "Any",
                    "list": false
                },
                "model_name": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "text-davinci-003",
                    "password": false,
                    "options": [
                        "text-davinci-003",
                        "text-davinci-002",
                        "text-curie-001",
                        "text-babbage-001",
                        "text-ada-001"
                    ],
                    "name": "model_name",
                    "advanced": false,
                    "type": "str",
                    "list": true
                },
                "temperature": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": 0.7,
                    "password": false,
                    "name": "temperature",
                    "advanced": false,
                    "type": "float",
                    "list": false
                },
                "max_tokens": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": 256,
                    "password": true,
                    "name": "max_tokens",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "top_p": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 1,
                    "password": false,
                    "name": "top_p",
                    "advanced": false,
                    "type": "float",
                    "list": false
                },
                "frequency_penalty": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 0,
                    "password": false,
                    "name": "frequency_penalty",
                    "advanced": false,
                    "type": "float",
                    "list": false
                },
                "presence_penalty": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 0,
                    "password": false,
                    "name": "presence_penalty",
                    "advanced": false,
                    "type": "float",
                    "list": false
                },
                "n": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 1,
                    "password": false,
                    "name": "n",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "best_of": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 1,
                    "password": false,
                    "name": "best_of",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "model_kwargs": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "model_kwargs",
                    "advanced": true,
                    "type": "code",
                    "list": false
                },
                "openai_api_key": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "password": true,
                    "name": "openai_api_key",
                    "display_name": "OpenAI API Key",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "openai_api_base": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": true,
                    "name": "openai_api_base",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "openai_organization": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "openai_organization",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "batch_size": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 20,
                    "password": false,
                    "name": "batch_size",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "request_timeout": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "request_timeout",
                    "advanced": false,
                    "type": "Union[float, Tuple[float, float], NoneType]",
                    "list": false
                },
                "logit_bias": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "logit_bias",
                    "advanced": false,
                    "type": "code",
                    "list": false
                },
                "max_retries": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 6,
                    "password": false,
                    "name": "max_retries",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "streaming": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": false,
                    "password": false,
                    "name": "streaming",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "allowed_special": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": [],
                    "password": false,
                    "name": "allowed_special",
                    "advanced": false,
                    "type": "Union[Literal['all'], AbstractSet[str]",
                    "list": true
                },
                "disallowed_special": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "all",
                    "password": false,
                    "name": "disallowed_special",
                    "advanced": false,
                    "type": "Union[Literal['all'], Collection[str]]",
                    "list": false
                },
                "_type": "OpenAI"
            },
            "description": "Wrapper around OpenAI large language models.",
            "base_classes": [
                "BaseLLM",
                "OpenAI",
                "BaseOpenAI",
                "BaseLanguageModel"
            ]
        },
        "ChatOpenAI": {
            "template": {
                "verbose": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": false,
                    "password": false,
                    "name": "verbose",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": true
                },
                "client": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "client",
                    "advanced": false,
                    "type": "Any",
                    "list": false
                },
                "model_name": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "gpt-3.5-turbo",
                    "password": false,
                    "options": [
                        "gpt-3.5-turbo",
                        "gpt-4",
                        "gpt-4-32k"
                    ],
                    "name": "model_name",
                    "advanced": false,
                    "type": "str",
                    "list": true
                },
                "temperature": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": 0.7,
                    "password": false,
                    "name": "temperature",
                    "advanced": false,
                    "type": "float",
                    "list": false
                },
                "model_kwargs": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "model_kwargs",
                    "advanced": true,
                    "type": "code",
                    "list": false
                },
                "openai_api_key": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "password": true,
                    "name": "openai_api_key",
                    "display_name": "OpenAI API Key",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "openai_organization": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "openai_organization",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "request_timeout": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "request_timeout",
                    "advanced": false,
                    "type": "Union[float, Tuple[float, float], NoneType]",
                    "list": false
                },
                "max_retries": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 6,
                    "password": false,
                    "name": "max_retries",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "streaming": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": false,
                    "password": false,
                    "name": "streaming",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "n": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 1,
                    "password": false,
                    "name": "n",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "max_tokens": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": true,
                    "name": "max_tokens",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "_type": "ChatOpenAI"
            },
            "description": "Wrapper around OpenAI Chat large language models.",
            "base_classes": [
                "BaseLanguageModel",
                "ChatOpenAI",
                "BaseChatModel"
            ]
        }
    },
    "memories": {
        "ConversationBufferMemory": {
            "template": {
                "chat_memory": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "chat_memory",
                    "advanced": false,
                    "type": "BaseChatMessageHistory",
                    "list": false
                },
                "output_key": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "output_key",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "input_key": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "input_key",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "return_messages": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "return_messages",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "human_prefix": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "Human",
                    "password": false,
                    "name": "human_prefix",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "ai_prefix": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "AI",
                    "password": false,
                    "name": "ai_prefix",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "memory_key": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "history",
                    "password": false,
                    "name": "memory_key",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "ConversationBufferMemory"
            },
            "description": "Buffer for storing conversation memory.",
            "base_classes": [
                "BaseChatMemory",
                "ConversationBufferMemory",
                "BaseMemory"
            ]
        },
        "ConversationKGMemory": {
            "template": {
                "chat_memory": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "chat_memory",
                    "advanced": false,
                    "type": "BaseChatMessageHistory",
                    "list": false
                },
                "output_key": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "output_key",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "input_key": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "input_key",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "return_messages": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "return_messages",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "k": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": 10,
                    "password": false,
                    "name": "k",
                    "display_name": "Memory Size",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "human_prefix": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "Human",
                    "password": false,
                    "name": "human_prefix",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "ai_prefix": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "AI",
                    "password": false,
                    "name": "ai_prefix",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "kg": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "kg",
                    "advanced": false,
                    "type": "NetworkxEntityGraph",
                    "list": false
                },
                "knowledge_extraction_prompt": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "knowledge_extraction_prompt",
                    "advanced": false,
                    "type": "BasePromptTemplate",
                    "list": false
                },
                "entity_extraction_prompt": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "entity_extraction_prompt",
                    "advanced": false,
                    "type": "BasePromptTemplate",
                    "list": false
                },
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "advanced": false,
                    "type": "BaseLanguageModel",
                    "list": false
                },
                "summary_message_cls": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "summary_message_cls",
                    "advanced": false,
                    "type": "Type[langchain.schema.BaseMessage]",
                    "list": false
                },
                "memory_key": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "history",
                    "password": false,
                    "name": "memory_key",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "ConversationKGMemory"
            },
            "description": "Knowledge graph memory for storing conversation memory.",
            "base_classes": [
                "BaseChatMemory",
                "ConversationKGMemory",
                "BaseMemory"
            ]
        },
        "ConversationSummaryMemory": {
            "template": {
                "human_prefix": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "Human",
                    "password": false,
                    "name": "human_prefix",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "ai_prefix": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "AI",
                    "password": false,
                    "name": "ai_prefix",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "advanced": false,
                    "type": "BaseLanguageModel",
                    "list": false
                },
                "prompt": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "prompt",
                    "advanced": false,
                    "type": "BasePromptTemplate",
                    "list": false
                },
                "summary_message_cls": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "summary_message_cls",
                    "advanced": false,
                    "type": "Type[langchain.schema.BaseMessage]",
                    "list": false
                },
                "chat_memory": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "chat_memory",
                    "advanced": false,
                    "type": "BaseChatMessageHistory",
                    "list": false
                },
                "output_key": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "output_key",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "input_key": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "input_key",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "return_messages": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "return_messages",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "buffer": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "",
                    "password": false,
                    "name": "buffer",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "memory_key": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "history",
                    "password": false,
                    "name": "memory_key",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "ConversationSummaryMemory"
            },
            "description": "Conversation summarizer to memory.",
            "base_classes": [
                "ConversationSummaryMemory",
                "BaseChatMemory",
                "SummarizerMixin",
                "BaseMemory"
            ]
        }
    },
    "tools": {
        "PAL-MATH": {
            "template": {
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "advanced": false,
                    "type": "BaseLLM",
                    "list": false
                },
                "_type": "PAL-MATH"
            },
            "description": "A language model that is really good at solving complex word math problems. Input should be a fully worded hard word math problem.",
            "base_classes": [
                "Tool"
            ]
        },
        "Calculator": {
            "template": {
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "advanced": false,
                    "type": "BaseLLM",
                    "list": false
                },
                "_type": "Calculator"
            },
            "description": "Useful for when you need to answer questions about math.",
            "base_classes": [
                "Tool"
            ]
        },
        "News API": {
            "template": {
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "advanced": false,
                    "type": "BaseLLM",
                    "list": false
                },
                "news_api_key": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "password": true,
                    "name": "news_api_key",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "News API"
            },
            "description": "Use this when you want to get information about the top headlines of current news stories. The input should be a question in natural language that this API can answer.",
            "base_classes": [
                "Tool"
            ]
        },
        "TMDB API": {
            "template": {
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "advanced": false,
                    "type": "BaseLLM",
                    "list": false
                },
                "tmdb_bearer_token": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "password": true,
                    "name": "tmdb_bearer_token",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "TMDB API"
            },
            "description": "Useful for when you want to get information from The Movie Database. The input should be a question in natural language that this API can answer.",
            "base_classes": [
                "Tool"
            ]
        },
        "Podcast API": {
            "template": {
                "llm": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "advanced": false,
                    "type": "BaseLLM",
                    "list": false
                },
                "listen_api_key": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "password": true,
                    "name": "listen_api_key",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "Podcast API"
            },
            "description": "Use the Listen Notes Podcast API to search all podcasts or episodes. The input should be a question in natural language that this API can answer.",
            "base_classes": [
                "Tool"
            ]
        },
        "Serper Search": {
            "template": {
                "serper_api_key": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "password": true,
                    "name": "serper_api_key",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "Serper Search"
            },
            "description": "A low-cost Google Search API. Useful for when you need to answer questions about current events. Input should be a search query.",
            "base_classes": [
                "Tool"
            ]
        },
        "Search": {
            "template": {
                "serpapi_api_key": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "password": true,
                    "name": "serpapi_api_key",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "aiosession": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "",
                    "password": false,
                    "name": "aiosession",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "Search"
            },
            "description": "A search engine. Useful for when you need to answer questions about current events. Input should be a search query.",
            "base_classes": [
                "Tool"
            ]
        },
        "Tool": {
            "template": {
                "name": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "password": false,
                    "name": "name",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "description": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": true,
                    "value": "",
                    "password": false,
                    "name": "description",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "func": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "func",
                    "advanced": false,
                    "type": "function",
                    "list": false
                },
                "return_direct": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": false,
                    "password": false,
                    "name": "return_direct",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "_type": "Tool"
            },
            "description": "Tool to be used in the flow.",
            "base_classes": [
                "Tool"
            ]
        },
        "PythonFunction": {
            "template": {
                "code": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": true,
                    "value": "\ndef python_function(text: str) -> str:\n    \"\"\"This is a default python function that returns the input text\"\"\"\n    return text\n",
                    "password": false,
                    "name": "code",
                    "advanced": false,
                    "type": "code",
                    "list": false
                },
                "_type": "python_function"
            },
            "description": "Python function to be executed.",
            "base_classes": [
                "function"
            ]
        },
        "JsonSpec": {
            "template": {
                "max_value_length": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "password": false,
                    "name": "max_value_length",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "suffixes": [
                        ".json",
                        ".yaml",
                        ".yml"
                    ],
                    "password": false,
                    "name": "path",
                    "advanced": false,
                    "type": "file",
                    "list": false,
                    "fileTypes": [
                        "json",
                        "yaml",
                        "yml"
                    ],
                    "content": null
                },
                "_type": "JsonSpec"
            },
            "description": "",
            "base_classes": [
                "Tool",
                "JsonSpec"
            ]
        },
        "QuerySQLDataBaseTool": {
            "template": {
                "args_schema": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "args_schema",
                    "advanced": false,
                    "type": "Type[pydantic.main.BaseModel]",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": false
                },
                "db": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "db",
                    "advanced": false,
                    "type": "SQLDatabase",
                    "list": false
                },
                "_type": "QuerySQLDataBaseTool"
            },
            "description": "\n    Input to this tool is a detailed and correct SQL query, output is a result from the database.\n    If the query is not correct, an error message will be returned.\n    If an error is returned, rewrite the query, check the query, and try again.\n    ",
            "base_classes": [
                "Tool",
                "BaseSQLDatabaseTool",
                "QuerySQLDataBaseTool",
                "BaseTool"
            ]
        },
        "InfoSQLDatabaseTool": {
            "template": {
                "args_schema": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "args_schema",
                    "advanced": false,
                    "type": "Type[pydantic.main.BaseModel]",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": false
                },
                "db": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "db",
                    "advanced": false,
                    "type": "SQLDatabase",
                    "list": false
                },
                "_type": "InfoSQLDatabaseTool"
            },
            "description": "\n    Input to this tool is a comma-separated list of tables, output is the schema and sample rows for those tables.\n    Be sure that the tables actually exist by calling list_tables_sql_db first!\n\n    Example Input: \"table1, table2, table3\"\n    ",
            "base_classes": [
                "Tool",
                "BaseSQLDatabaseTool",
                "InfoSQLDatabaseTool",
                "BaseTool"
            ]
        },
        "ListSQLDatabaseTool": {
            "template": {
                "args_schema": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "args_schema",
                    "advanced": false,
                    "type": "Type[pydantic.main.BaseModel]",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": false
                },
                "db": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "db",
                    "advanced": false,
                    "type": "SQLDatabase",
                    "list": false
                },
                "_type": "ListSQLDatabaseTool"
            },
            "description": "Input is an empty string, output is a comma separated list of tables in the database.",
            "base_classes": [
                "Tool",
                "BaseSQLDatabaseTool",
                "ListSQLDatabaseTool",
                "BaseTool"
            ]
        },
        "BingSearchRun": {
            "template": {
                "args_schema": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "args_schema",
                    "advanced": false,
                    "type": "Type[pydantic.main.BaseModel]",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": false
                },
                "api_wrapper": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": true,
                    "name": "api_wrapper",
                    "advanced": false,
                    "type": "BingSearchAPIWrapper",
                    "list": false
                },
                "_type": "BingSearchRun"
            },
            "description": "A wrapper around Bing Search. Useful for when you need to answer questions about current events. Input should be a search query.",
            "base_classes": [
                "Tool",
                "BingSearchRun",
                "BaseTool"
            ]
        },
        "GoogleSearchRun": {
            "template": {
                "args_schema": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "args_schema",
                    "advanced": false,
                    "type": "Type[pydantic.main.BaseModel]",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": false
                },
                "api_wrapper": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": true,
                    "name": "api_wrapper",
                    "advanced": false,
                    "type": "GoogleSearchAPIWrapper",
                    "list": false
                },
                "_type": "GoogleSearchRun"
            },
            "description": "A wrapper around Google Search. Useful for when you need to answer questions about current events. Input should be a search query.",
            "base_classes": [
                "Tool",
                "GoogleSearchRun",
                "BaseTool"
            ]
        },
        "GoogleSearchResults": {
            "template": {
                "args_schema": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "args_schema",
                    "advanced": false,
                    "type": "Type[pydantic.main.BaseModel]",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": false
                },
                "num_results": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 4,
                    "password": false,
                    "name": "num_results",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "api_wrapper": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": true,
                    "name": "api_wrapper",
                    "advanced": false,
                    "type": "GoogleSearchAPIWrapper",
                    "list": false
                },
                "_type": "GoogleSearchResults"
            },
            "description": "A wrapper around Google Search. Useful for when you need to answer questions about current events. Input should be a search query. Output is a JSON array of the query results",
            "base_classes": [
                "Tool",
                "GoogleSearchResults",
                "BaseTool"
            ]
        },
        "JsonListKeysTool": {
            "template": {
                "args_schema": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "args_schema",
                    "advanced": false,
                    "type": "Type[pydantic.main.BaseModel]",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": false
                },
                "spec": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "spec",
                    "advanced": false,
                    "type": "JsonSpec",
                    "list": false
                },
                "_type": "JsonListKeysTool"
            },
            "description": "\n    Can be used to list all keys at a given path. \n    Before calling this you should be SURE that the path to this exists.\n    The input is a text representation of the path to the dict in Python syntax (e.g. data[\"key1\"][0][\"key2\"]).\n    ",
            "base_classes": [
                "Tool",
                "JsonListKeysTool",
                "BaseTool"
            ]
        },
        "JsonGetValueTool": {
            "template": {
                "args_schema": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "args_schema",
                    "advanced": false,
                    "type": "Type[pydantic.main.BaseModel]",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": false
                },
                "spec": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "spec",
                    "advanced": false,
                    "type": "JsonSpec",
                    "list": false
                },
                "_type": "JsonGetValueTool"
            },
            "description": "\n    Can be used to see value in string format at a given path.\n    Before calling this you should be SURE that the path to this exists.\n    The input is a text representation of the path to the dict in Python syntax (e.g. data[\"key1\"][0][\"key2\"]).\n    ",
            "base_classes": [
                "Tool",
                "JsonGetValueTool",
                "BaseTool"
            ]
        },
        "PythonREPLTool": {
            "template": {
                "args_schema": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "args_schema",
                    "advanced": false,
                    "type": "Type[pydantic.main.BaseModel]",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": false
                },
                "python_repl": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "python_repl",
                    "advanced": false,
                    "type": "PythonREPL",
                    "list": false
                },
                "sanitize_input": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": true,
                    "password": false,
                    "name": "sanitize_input",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "_type": "PythonREPLTool"
            },
            "description": "A Python shell. Use this to execute python commands. Input should be a valid python command. If you want to see the output of a value, you should print it out with `print(...)`.",
            "base_classes": [
                "Tool",
                "PythonREPLTool",
                "BaseTool"
            ]
        },
        "PythonAstREPLTool": {
            "template": {
                "args_schema": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "args_schema",
                    "advanced": false,
                    "type": "Type[pydantic.main.BaseModel]",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": false
                },
                "globals": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "globals",
                    "advanced": false,
                    "type": "code",
                    "list": false
                },
                "locals": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "locals",
                    "advanced": false,
                    "type": "code",
                    "list": false
                },
                "sanitize_input": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": true,
                    "password": false,
                    "name": "sanitize_input",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "_type": "PythonAstREPLTool"
            },
            "description": "A Python shell. Use this to execute python commands. Input should be a valid python command. When using this tool, sometimes output is abbreviated - make sure it does not look abbreviated before using it in your answer.",
            "base_classes": [
                "Tool",
                "PythonAstREPLTool",
                "BaseTool"
            ]
        },
        "RequestsGetTool": {
            "template": {
                "args_schema": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "args_schema",
                    "advanced": false,
                    "type": "Type[pydantic.main.BaseModel]",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": false
                },
                "requests_wrapper": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "requests_wrapper",
                    "advanced": false,
                    "type": "TextRequestsWrapper",
                    "list": false
                },
                "_type": "RequestsGetTool"
            },
            "description": "A portal to the internet. Use this when you need to get specific content from a website. Input should be a  url (i.e. https://www.google.com). The output will be the text response of the GET request.",
            "base_classes": [
                "Tool",
                "RequestsGetTool",
                "BaseRequestsTool",
                "BaseTool"
            ]
        },
        "RequestsPostTool": {
            "template": {
                "args_schema": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "args_schema",
                    "advanced": false,
                    "type": "Type[pydantic.main.BaseModel]",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": false
                },
                "requests_wrapper": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "requests_wrapper",
                    "advanced": false,
                    "type": "TextRequestsWrapper",
                    "list": false
                },
                "_type": "RequestsPostTool"
            },
            "description": "Use this when you want to POST to a website.\n    Input should be a json string with two keys: \"url\" and \"data\".\n    The value of \"url\" should be a string, and the value of \"data\" should be a dictionary of \n    key-value pairs you want to POST to the url.\n    Be careful to always use double quotes for strings in the json string\n    The output will be the text response of the POST request.\n    ",
            "base_classes": [
                "Tool",
                "RequestsPostTool",
                "BaseRequestsTool",
                "BaseTool"
            ]
        },
        "RequestsPatchTool": {
            "template": {
                "args_schema": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "args_schema",
                    "advanced": false,
                    "type": "Type[pydantic.main.BaseModel]",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": false
                },
                "requests_wrapper": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "requests_wrapper",
                    "advanced": false,
                    "type": "TextRequestsWrapper",
                    "list": false
                },
                "_type": "RequestsPatchTool"
            },
            "description": "Use this when you want to PATCH to a website.\n    Input should be a json string with two keys: \"url\" and \"data\".\n    The value of \"url\" should be a string, and the value of \"data\" should be a dictionary of \n    key-value pairs you want to PATCH to the url.\n    Be careful to always use double quotes for strings in the json string\n    The output will be the text response of the PATCH request.\n    ",
            "base_classes": [
                "Tool",
                "BaseRequestsTool",
                "BaseTool",
                "RequestsPatchTool"
            ]
        },
        "RequestsPutTool": {
            "template": {
                "args_schema": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "args_schema",
                    "advanced": false,
                    "type": "Type[pydantic.main.BaseModel]",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": false
                },
                "requests_wrapper": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "requests_wrapper",
                    "advanced": false,
                    "type": "TextRequestsWrapper",
                    "list": false
                },
                "_type": "RequestsPutTool"
            },
            "description": "Use this when you want to PUT to a website.\n    Input should be a json string with two keys: \"url\" and \"data\".\n    The value of \"url\" should be a string, and the value of \"data\" should be a dictionary of \n    key-value pairs you want to PUT to the url.\n    Be careful to always use double quotes for strings in the json string.\n    The output will be the text response of the PUT request.\n    ",
            "base_classes": [
                "Tool",
                "RequestsPutTool",
                "BaseRequestsTool",
                "BaseTool"
            ]
        },
        "RequestsDeleteTool": {
            "template": {
                "args_schema": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "args_schema",
                    "advanced": false,
                    "type": "Type[pydantic.main.BaseModel]",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": false
                },
                "requests_wrapper": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "requests_wrapper",
                    "advanced": false,
                    "type": "TextRequestsWrapper",
                    "list": false
                },
                "_type": "RequestsDeleteTool"
            },
            "description": "A portal to the internet. Use this when you need to make a DELETE request to a URL. Input should be a specific url, and the output will be the text response of the DELETE request.",
            "base_classes": [
                "Tool",
                "RequestsDeleteTool",
                "BaseRequestsTool",
                "BaseTool"
            ]
        },
        "WikipediaQueryRun": {
            "template": {
                "args_schema": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "args_schema",
                    "advanced": false,
                    "type": "Type[pydantic.main.BaseModel]",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": false
                },
                "api_wrapper": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": true,
                    "name": "api_wrapper",
                    "advanced": false,
                    "type": "WikipediaAPIWrapper",
                    "list": false
                },
                "_type": "WikipediaQueryRun"
            },
            "description": "A wrapper around Wikipedia. Useful for when you need to answer general questions about people, places, companies, historical events, or other subjects. Input should be a search query.",
            "base_classes": [
                "Tool",
                "WikipediaQueryRun",
                "BaseTool"
            ]
        },
        "WolframAlphaQueryRun": {
            "template": {
                "args_schema": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "args_schema",
                    "advanced": false,
                    "type": "Type[pydantic.main.BaseModel]",
                    "list": false
                },
                "callbacks": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "callbacks",
                    "advanced": false,
                    "type": "Union[langchain.callbacks.base.BaseCallbackHandler], BaseCallbackManager, NoneType",
                    "list": false
                },
                "api_wrapper": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": true,
                    "name": "api_wrapper",
                    "advanced": false,
                    "type": "WolframAlphaAPIWrapper",
                    "list": false
                },
                "_type": "WolframAlphaQueryRun"
            },
            "description": "A wrapper around Wolfram Alpha. Useful for when you need to answer questions about Math, Science, Technology, Culture, Society and Everyday Life. Input should be a search query.",
            "base_classes": [
                "Tool",
                "WolframAlphaQueryRun",
                "BaseTool"
            ]
        }
    },
    "toolkits": {
        "JsonToolkit": {
            "template": {
                "spec": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "spec",
                    "advanced": false,
                    "type": "JsonSpec",
                    "list": false
                },
                "_type": "JsonToolkit"
            },
            "description": "Toolkit for interacting with a JSON spec.",
            "base_classes": [
                "JsonToolkit",
                "BaseToolkit"
            ]
        },
        "OpenAPIToolkit": {
            "template": {
                "json_agent": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "json_agent",
                    "advanced": false,
                    "type": "AgentExecutor",
                    "list": false
                },
                "requests_wrapper": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "requests_wrapper",
                    "advanced": false,
                    "type": "TextRequestsWrapper",
                    "list": false
                },
                "_type": "OpenAPIToolkit"
            },
            "description": "Toolkit for interacting with a OpenAPI api.",
            "base_classes": [
                "OpenAPIToolkit",
                "BaseToolkit"
            ]
        },
        "VectorStoreInfo": {
            "template": {
                "vectorstore": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "vectorstore",
                    "advanced": false,
                    "type": "VectorStore",
                    "list": false
                },
                "name": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "name",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "description": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": true,
                    "password": false,
                    "name": "description",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "VectorStoreInfo"
            },
            "description": "Information about a vectorstore.",
            "base_classes": [
                "VectorStoreInfo"
            ]
        },
        "VectorStoreRouterToolkit": {
            "template": {
                "vectorstores": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "vectorstores",
                    "advanced": false,
                    "type": "VectorStoreInfo",
                    "list": true
                },
                "llm": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "llm",
                    "advanced": false,
                    "type": "BaseLanguageModel",
                    "list": false
                },
                "_type": "VectorStoreRouterToolkit"
            },
            "description": "Toolkit for routing between vectorstores.",
            "base_classes": [
                "VectorStoreRouterToolkit",
                "BaseToolkit"
            ]
        }
    },
    "wrappers": {
        "TextRequestsWrapper": {
            "template": {
                "headers": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": true,
                    "value": "{'Authorization':\n            'Bearer <token>'}",
                    "password": false,
                    "name": "headers",
                    "advanced": false,
                    "type": "code",
                    "list": false
                },
                "aiosession": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "aiosession",
                    "advanced": false,
                    "type": "ClientSession",
                    "list": false
                },
                "_type": "TextRequestsWrapper"
            },
            "description": "Lightweight wrapper around requests library.",
            "base_classes": [
                "TextRequestsWrapper"
            ]
        }
    },
    "embeddings": {
        "OpenAIEmbeddings": {
            "template": {
                "client": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "client",
                    "advanced": false,
                    "type": "Any",
                    "list": false
                },
                "model": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "text-embedding-ada-002",
                    "password": false,
                    "name": "model",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "deployment": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "text-embedding-ada-002",
                    "password": false,
                    "name": "deployment",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "openai_api_version": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "2022-12-01",
                    "password": true,
                    "name": "openai_api_version",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "openai_api_base": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": true,
                    "name": "openai_api_base",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "openai_api_type": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": true,
                    "name": "openai_api_type",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "embedding_ctx_length": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 8191,
                    "password": false,
                    "name": "embedding_ctx_length",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "openai_api_key": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "password": true,
                    "name": "openai_api_key",
                    "display_name": "OpenAI API Key",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "openai_organization": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "openai_organization",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "allowed_special": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": [],
                    "password": false,
                    "name": "allowed_special",
                    "advanced": false,
                    "type": "Union[Literal['all'], Set[str]",
                    "list": true
                },
                "disallowed_special": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "all",
                    "password": false,
                    "name": "disallowed_special",
                    "advanced": false,
                    "type": "Union[Literal['all'], Set[str], Tuple[()]",
                    "list": true
                },
                "chunk_size": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 1000,
                    "password": false,
                    "name": "chunk_size",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "max_retries": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 6,
                    "password": false,
                    "name": "max_retries",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "_type": "OpenAIEmbeddings"
            },
            "description": "Wrapper around OpenAI embedding models.",
            "base_classes": [
                "OpenAIEmbeddings",
                "Embeddings"
            ]
        }
    },
    "vectorstores": {
        "Chroma": {
            "template": {
                "documents": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "documents",
                    "advanced": false,
                    "type": "TextSplitter",
                    "list": false
                },
                "embedding": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "embedding",
                    "advanced": false,
                    "type": "Embeddings",
                    "list": false
                },
                "_type": "Chroma"
            },
            "description": "Wrapper around ChromaDB embeddings platform.",
            "base_classes": [
                "VectorStore",
                "Chroma"
            ]
        }
    },
    "documentloaders": {
        "AZLyricsLoader": {
            "template": {
                "web_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "password": false,
                    "name": "web_path",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "AZLyricsLoader"
            },
            "description": "Loader that loads AZLyrics webpages.",
            "base_classes": [
                "BaseLoader",
                "AZLyricsLoader",
                "WebBaseLoader"
            ]
        },
        "AirbyteJSONLoader": {
            "template": {
                "file_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "suffixes": [
                        ".json"
                    ],
                    "password": false,
                    "name": "file_path",
                    "advanced": false,
                    "type": "file",
                    "list": false,
                    "fileTypes": [
                        "json"
                    ],
                    "content": null
                },
                "_type": "AirbyteJSONLoader"
            },
            "description": "Loader that loads local airbyte json files.",
            "base_classes": [
                "BaseLoader",
                "AirbyteJSONLoader"
            ]
        },
        "BSHTMLLoader": {
            "template": {
                "file_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "suffixes": [
                        ".html"
                    ],
                    "password": false,
                    "name": "file_path",
                    "advanced": false,
                    "type": "file",
                    "list": false,
                    "fileTypes": [
                        "html"
                    ],
                    "content": null
                },
                "_type": "BSHTMLLoader"
            },
            "description": "Loader that uses beautiful soup to parse HTML files.",
            "base_classes": [
                "BaseLoader",
                "BSHTMLLoader"
            ]
        },
        "CSVLoader": {
            "template": {
                "file_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "suffixes": [
                        ".csv"
                    ],
                    "password": false,
                    "name": "file_path",
                    "advanced": false,
                    "type": "file",
                    "list": false,
                    "fileTypes": [
                        "csv"
                    ],
                    "content": null
                },
                "_type": "CSVLoader"
            },
            "description": "Loads a CSV file into a list of documents.",
            "base_classes": [
                "BaseLoader",
                "CSVLoader"
            ]
        },
        "CoNLLULoader": {
            "template": {
                "file_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "suffixes": [
                        ".csv"
                    ],
                    "password": false,
                    "name": "file_path",
                    "advanced": false,
                    "type": "file",
                    "list": false,
                    "fileTypes": [
                        "csv"
                    ],
                    "content": null
                },
                "_type": "CoNLLULoader"
            },
            "description": "Load CoNLL-U files.",
            "base_classes": [
                "BaseLoader",
                "CoNLLULoader"
            ]
        },
        "CollegeConfidentialLoader": {
            "template": {
                "web_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "password": false,
                    "name": "web_path",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "CollegeConfidentialLoader"
            },
            "description": "Loader that loads College Confidential webpages.",
            "base_classes": [
                "BaseLoader",
                "WebBaseLoader",
                "CollegeConfidentialLoader"
            ]
        },
        "EverNoteLoader": {
            "template": {
                "file_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "suffixes": [
                        ".xml"
                    ],
                    "password": false,
                    "name": "file_path",
                    "advanced": false,
                    "type": "file",
                    "list": false,
                    "fileTypes": [
                        "xml"
                    ],
                    "content": null
                },
                "_type": "EverNoteLoader"
            },
            "description": "Loader to load in EverNote files..",
            "base_classes": [
                "BaseLoader",
                "EverNoteLoader"
            ]
        },
        "FacebookChatLoader": {
            "template": {
                "file_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "suffixes": [
                        ".json"
                    ],
                    "password": false,
                    "name": "file_path",
                    "advanced": false,
                    "type": "file",
                    "list": false,
                    "fileTypes": [
                        "json"
                    ],
                    "content": null
                },
                "_type": "FacebookChatLoader"
            },
            "description": "Loader that loads Facebook messages json directory dump.",
            "base_classes": [
                "BaseLoader",
                "FacebookChatLoader"
            ]
        },
        "GitbookLoader": {
            "template": {
                "web_page": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "password": false,
                    "name": "web_page",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "GitbookLoader"
            },
            "description": "Load GitBook data.",
            "base_classes": [
                "BaseLoader",
                "WebBaseLoader",
                "GitbookLoader"
            ]
        },
        "GutenbergLoader": {
            "template": {
                "file_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "suffixes": [
                        ".txt"
                    ],
                    "password": false,
                    "name": "file_path",
                    "advanced": false,
                    "type": "file",
                    "list": false,
                    "fileTypes": [
                        "txt"
                    ],
                    "content": null
                },
                "_type": "GutenbergLoader"
            },
            "description": "Loader that uses urllib to load .txt web files.",
            "base_classes": [
                "BaseLoader",
                "GutenbergLoader"
            ]
        },
        "HNLoader": {
            "template": {
                "web_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "password": false,
                    "name": "web_path",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "HNLoader"
            },
            "description": "Load Hacker News data from either main page results or the comments page.",
            "base_classes": [
                "BaseLoader",
                "WebBaseLoader",
                "HNLoader"
            ]
        },
        "IFixitLoader": {
            "template": {
                "web_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "password": false,
                    "name": "web_path",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "IFixitLoader"
            },
            "description": "Load iFixit repair guides, device wikis and answers.",
            "base_classes": [
                "BaseLoader",
                "IFixitLoader"
            ]
        },
        "IMSDbLoader": {
            "template": {
                "web_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "password": false,
                    "name": "web_path",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "IMSDbLoader"
            },
            "description": "Loader that loads IMSDb webpages.",
            "base_classes": [
                "BaseLoader",
                "IMSDbLoader",
                "WebBaseLoader"
            ]
        },
        "PyPDFLoader": {
            "template": {
                "file_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "suffixes": [
                        ".pdf"
                    ],
                    "password": false,
                    "name": "file_path",
                    "advanced": false,
                    "type": "file",
                    "list": false,
                    "fileTypes": [
                        "pdf"
                    ],
                    "content": null
                },
                "_type": "PyPDFLoader"
            },
            "description": "Loads a PDF with pypdf and chunks at character level.",
            "base_classes": [
                "BaseLoader",
                "PyPDFLoader",
                "BasePDFLoader"
            ]
        },
        "ReadTheDocsLoader": {
            "template": {
                "path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "password": false,
                    "name": "path",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "ReadTheDocsLoader"
            },
            "description": "Loader that loads ReadTheDocs documentation directory dump.",
            "base_classes": [
                "BaseLoader",
                "ReadTheDocsLoader"
            ]
        },
        "SRTLoader": {
            "template": {
                "file_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "suffixes": [
                        ".srt"
                    ],
                    "password": false,
                    "name": "file_path",
                    "advanced": false,
                    "type": "file",
                    "list": false,
                    "fileTypes": [
                        "srt"
                    ],
                    "content": null
                },
                "_type": "SRTLoader"
            },
            "description": "Loader for .srt (subtitle) files.",
            "base_classes": [
                "BaseLoader",
                "SRTLoader"
            ]
        },
        "TelegramChatLoader": {
            "template": {
                "file_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "suffixes": [
                        ".json"
                    ],
                    "password": false,
                    "name": "file_path",
                    "advanced": false,
                    "type": "file",
                    "list": false,
                    "fileTypes": [
                        "json"
                    ],
                    "content": null
                },
                "_type": "TelegramChatLoader"
            },
            "description": "Loader that loads Telegram chat json directory dump.",
            "base_classes": [
                "BaseLoader",
                "TelegramChatLoader"
            ]
        },
        "TextLoader": {
            "template": {
                "file_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "suffixes": [
                        ".txt"
                    ],
                    "password": false,
                    "name": "file_path",
                    "advanced": false,
                    "type": "file",
                    "list": false,
                    "fileTypes": [
                        "txt"
                    ],
                    "content": null
                },
                "_type": "TextLoader"
            },
            "description": "Load text files.",
            "base_classes": [
                "BaseLoader",
                "TextLoader"
            ]
        },
        "UnstructuredEmailLoader": {
            "template": {
                "file_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "suffixes": [
                        ".eml"
                    ],
                    "password": false,
                    "name": "file_path",
                    "advanced": false,
                    "type": "file",
                    "list": false,
                    "fileTypes": [
                        "eml"
                    ],
                    "content": null
                },
                "_type": "UnstructuredEmailLoader"
            },
            "description": "Loader that uses unstructured to load email files.",
            "base_classes": [
                "BaseLoader",
                "UnstructuredEmailLoader",
                "UnstructuredBaseLoader",
                "UnstructuredFileLoader"
            ]
        },
        "UnstructuredHTMLLoader": {
            "template": {
                "file_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "suffixes": [
                        ".html"
                    ],
                    "password": false,
                    "name": "file_path",
                    "advanced": false,
                    "type": "file",
                    "list": false,
                    "fileTypes": [
                        "html"
                    ],
                    "content": null
                },
                "_type": "UnstructuredHTMLLoader"
            },
            "description": "Loader that uses unstructured to load HTML files.",
            "base_classes": [
                "BaseLoader",
                "UnstructuredHTMLLoader",
                "UnstructuredBaseLoader",
                "UnstructuredFileLoader"
            ]
        },
        "UnstructuredMarkdownLoader": {
            "template": {
                "file_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "suffixes": [
                        ".md"
                    ],
                    "password": false,
                    "name": "file_path",
                    "advanced": false,
                    "type": "file",
                    "list": false,
                    "fileTypes": [
                        "md"
                    ],
                    "content": null
                },
                "_type": "UnstructuredMarkdownLoader"
            },
            "description": "Loader that uses unstructured to load markdown files.",
            "base_classes": [
                "BaseLoader",
                "UnstructuredBaseLoader",
                "UnstructuredMarkdownLoader",
                "UnstructuredFileLoader"
            ]
        },
        "UnstructuredPowerPointLoader": {
            "template": {
                "file_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "suffixes": [
                        ".pptx",
                        ".ppt"
                    ],
                    "password": false,
                    "name": "file_path",
                    "advanced": false,
                    "type": "file",
                    "list": false,
                    "fileTypes": [
                        "pptx",
                        "ppt"
                    ],
                    "content": null
                },
                "_type": "UnstructuredPowerPointLoader"
            },
            "description": "Loader that uses unstructured to load powerpoint files.",
            "base_classes": [
                "BaseLoader",
                "UnstructuredBaseLoader",
                "UnstructuredPowerPointLoader",
                "UnstructuredFileLoader"
            ]
        },
        "UnstructuredWordDocumentLoader": {
            "template": {
                "file_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "suffixes": [
                        ".docx",
                        ".doc"
                    ],
                    "password": false,
                    "name": "file_path",
                    "advanced": false,
                    "type": "file",
                    "list": false,
                    "fileTypes": [
                        "docx",
                        "doc"
                    ],
                    "content": null
                },
                "_type": "UnstructuredWordDocumentLoader"
            },
            "description": "Loader that uses unstructured to load word documents.",
            "base_classes": [
                "BaseLoader",
                "UnstructuredBaseLoader",
                "UnstructuredWordDocumentLoader",
                "UnstructuredFileLoader"
            ]
        },
        "WebBaseLoader": {
            "template": {
                "web_path": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "password": false,
                    "name": "web_path",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "WebBaseLoader"
            },
            "description": "Loader that uses urllib and beautiful soup to load webpages.",
            "base_classes": [
                "BaseLoader",
                "WebBaseLoader"
            ]
        }
    },
    "textsplitters": {
        "CharacterTextSplitter": {
            "template": {
                "documents": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "documents",
                    "advanced": false,
                    "type": "BaseLoader",
                    "list": false
                },
                "separator": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": ".",
                    "password": false,
                    "name": "separator",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "chunk_size": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": 4000,
                    "password": false,
                    "name": "chunk_size",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "chunk_overlap": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": 200,
                    "password": false,
                    "name": "chunk_overlap",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "_type": "CharacterTextSplitter"
            },
            "description": "Implementation of splitting text that looks at characters.",
            "base_classes": [
                "CharacterTextSplitter",
                "BaseDocumentTransformer",
                "TextSplitter"
            ]
        }
    },
    "utilities": {
        "BingSearchAPIWrapper": {
            "template": {
                "bing_subscription_key": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": true,
                    "name": "bing_subscription_key",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "bing_search_url": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": false,
                    "name": "bing_search_url",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "k": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 10,
                    "password": false,
                    "name": "k",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "_type": "BingSearchAPIWrapper"
            },
            "description": "Wrapper for Bing Search API.",
            "base_classes": [
                "BingSearchAPIWrapper"
            ]
        },
        "GoogleSearchAPIWrapper": {
            "template": {
                "search_engine": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "search_engine",
                    "advanced": false,
                    "type": "Any",
                    "list": false
                },
                "google_api_key": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": true,
                    "name": "google_api_key",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "google_cse_id": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "google_cse_id",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "k": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 10,
                    "password": false,
                    "name": "k",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "siterestrict": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": false,
                    "password": false,
                    "name": "siterestrict",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "_type": "GoogleSearchAPIWrapper"
            },
            "description": "Wrapper for Google Search API.",
            "base_classes": [
                "GoogleSearchAPIWrapper"
            ]
        },
        "GoogleSerperAPIWrapper": {
            "template": {
                "k": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 10,
                    "password": false,
                    "name": "k",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "gl": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "us",
                    "password": false,
                    "name": "gl",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "hl": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "en",
                    "password": false,
                    "name": "hl",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "serper_api_key": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": true,
                    "name": "serper_api_key",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "GoogleSerperAPIWrapper"
            },
            "description": "Wrapper around the Serper.dev Google Search API.",
            "base_classes": [
                "GoogleSerperAPIWrapper"
            ]
        },
        "SearxSearchWrapper": {
            "template": {
                "searx_host": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "",
                    "password": false,
                    "name": "searx_host",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "unsecure": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": false,
                    "password": false,
                    "name": "unsecure",
                    "advanced": false,
                    "type": "bool",
                    "list": false
                },
                "params": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "params",
                    "advanced": false,
                    "type": "code",
                    "list": false
                },
                "headers": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": true,
                    "value": "{'Authorization':\n            'Bearer <token>'}",
                    "password": false,
                    "name": "headers",
                    "advanced": false,
                    "type": "code",
                    "list": false
                },
                "engines": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "engines",
                    "advanced": false,
                    "type": "str",
                    "list": true
                },
                "categories": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "categories",
                    "advanced": false,
                    "type": "str",
                    "list": true
                },
                "query_suffix": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "",
                    "password": false,
                    "name": "query_suffix",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "k": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 10,
                    "password": false,
                    "name": "k",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "aiosession": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "aiosession",
                    "advanced": false,
                    "type": "Any",
                    "list": false
                },
                "_type": "SearxSearchWrapper"
            },
            "description": "Wrapper for Searx API.",
            "base_classes": [
                "SearxSearchWrapper"
            ]
        },
        "SerpAPIWrapper": {
            "template": {
                "search_engine": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "search_engine",
                    "advanced": false,
                    "type": "Any",
                    "list": false
                },
                "params": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": {
                        "engine": "google",
                        "google_domain": "google.com",
                        "gl": "us",
                        "hl": "en"
                    },
                    "password": false,
                    "name": "params",
                    "advanced": false,
                    "type": "code",
                    "list": false
                },
                "serpapi_api_key": {
                    "required": false,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "password": true,
                    "name": "serpapi_api_key",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "aiosession": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "aiosession",
                    "advanced": false,
                    "type": "ClientSession",
                    "list": false
                },
                "_type": "SerpAPIWrapper"
            },
            "description": "Wrapper around SerpAPI.",
            "base_classes": [
                "SerpAPIWrapper"
            ]
        },
        "WikipediaAPIWrapper": {
            "template": {
                "wiki_client": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "wiki_client",
                    "advanced": false,
                    "type": "Any",
                    "list": false
                },
                "top_k_results": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": 3,
                    "password": false,
                    "name": "top_k_results",
                    "advanced": false,
                    "type": "int",
                    "list": false
                },
                "lang": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "value": "en",
                    "password": false,
                    "name": "lang",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "WikipediaAPIWrapper"
            },
            "description": "Wrapper around WikipediaAPI.",
            "base_classes": [
                "WikipediaAPIWrapper"
            ]
        },
        "WolframAlphaAPIWrapper": {
            "template": {
                "wolfram_client": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "wolfram_client",
                    "advanced": false,
                    "type": "Any",
                    "list": false
                },
                "wolfram_alpha_appid": {
                    "required": false,
                    "placeholder": "",
                    "show": false,
                    "multiline": false,
                    "password": false,
                    "name": "wolfram_alpha_appid",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "WolframAlphaAPIWrapper"
            },
            "description": "Wrapper for Wolfram Alpha.",
            "base_classes": [
                "WolframAlphaAPIWrapper"
            ]
        },
        "SQLDatabase": {
            "template": {
                "uri": {
                    "required": true,
                    "placeholder": "",
                    "show": true,
                    "multiline": false,
                    "value": "",
                    "password": false,
                    "name": "uri",
                    "advanced": false,
                    "type": "str",
                    "list": false
                },
                "_type": "sql_database"
            },
            "description": "SQLAlchemy wrapper around a database.",
            "base_classes": [
                "SQLDatabase"
            ]
        }
    }
}